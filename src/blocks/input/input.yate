module "xb-field"
import "xblocks"

match .* block-class {
    if (name() == 'disabled' && boolean(.)) {
        @class += " is-disabled"
    }

    if (name() == 'autosize' && boolean(.)) {
        @class += " xb-field_autosize"
    }

    if (name() == 'size') {
        @class += " xb-field_size_{.}"
    }
}

match / xb-field {
<xb-field>
    apply .attrs.* xb-core-attrs
</xb-field>
}

match /[.attrs.postfix || .attrs.prefix || .attrs.reset || .attrs.label || .attrs.autosize] template {

}

match /[!(.attrs.postfix || .attrs.prefix || .attrs.reset || .attrs.label || .attrs.autosize)] template {

    apply . template-controller ('xb-field_simple', true())

}

match . template-controller (class, is-complex) {
controllerAttrs = [
    'name'
    'disabled'
    'placeholder'
    'readonly'
]

if (.attrs.multiline) {
    <textarea>
        @class = (
            class
        )
        if (is-complex) {
            apply .attrs.* block-class
        }
        apply .attrs.* xb-core-attrs (xb-concat-array(controllerAttrs, [
            'rows'
            'cols'
        ]))
        .attrs.value
    </textarea>
} else {
    <input type="text">
        @class = (
            class
        )
        if (is-complex) {
            apply .attrs.* block-class
        }
        apply .attrs.* xb-core-attrs (xb-concat-array(controllerAttrs, [
            'value'
        ]))
    </input>
}
}
