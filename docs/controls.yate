module "controls"
import "docs"

match .* _content {
    <h1 class="page-header anchor" data-hash="controls">
        "Controls"
    </h1>

    apply . _content-ico
    <p>&nbsp;</p>
    apply . _content-link
    <p>&nbsp;</p>
    apply . _content-button
    <p>&nbsp;</p>
    apply . _content-checkbox
    <p>&nbsp;</p>
    apply . _content-radio
    <p>&nbsp;</p>

    <h2 class="sub-header anchor" data-hash="controls/input">
        "Input"
    </h2>
    <p>&nbsp;</p>

    <h2 class="sub-header anchor" data-hash="controls/popup">
        "Popup"
    </h2>
    <p>&nbsp;</p>

    <h2 class="sub-header anchor" data-hash="controls/menu">
        "Menu"
    </h2>
}

match .* _content_attrs (array attrs) {
    <h3>{loc('%Controls__attrs')}</h3>
    <table class="table table-hover">
        for attrs.* {
            <tr>
                <td class="text-info">{.name}</td>
                <td>{.type}</td>
                <td>
                    if (.def) {
                        wrap-code(.def)
                    }
                </td>
                <td>{html(.descr)}</td>
            </tr>
        }
    </table>
}

match .* _content_sample (scalar sample) {
    <h3>{loc('%Controls__example')}</h3>
    <div class="panel panel-example">
        <div class="panel-heading">{html(sample)}</div>
        <div class="panel-body highlight">
            <pre>
                <code class="html">{sample}</code>
            </pre>
        </div>
    </div>
}

match .* _content_syntax (scalar sample) {
    <h3>{loc('%Controls__syntax')}</h3>
    <div class="highlight">
        <pre>
            <code class="html">{sample}</code>
        </pre>
    </div>
}

match .* _content-radio {
    <h2 class="sub-header anchor" data-hash="controls/radio">{loc('%Controls_radio__title')}</h2>
    <p>{html(loc('%Controls_radio__descr_p1'))}</p>

    apply . _content_syntax ("<xb-radio value=\"1\" name=\"radio\">radio label</xb-radio>")

    attrs = [
        {
            'name': 'autofocus'
            'type': 'boolean'
            'def': 'false'
            'descr': loc('%Controls__attrs_autofocus')
        }
        {
            'name': 'checked'
            'type': 'boolean'
            'def': 'false'
            'descr': loc('%Controls__attrs_checked')
        }
        {
            'name': 'for'
            'type': 'string'
            'descr': loc('%Controls__attrs_for')
        }
        {
            'name': 'form'
            'type': 'string'
            'descr': loc('%Controls__attrs_form')
        }
        {
            'name': 'name'
            'type': 'string'
            'descr': loc('%Controls__attrs_name')
        }
        {
            'name': 'required'
            'type': 'boolean'
            'def': 'false'
            'descr': loc('%Controls__attrs_required')
        }
        {
            'name': 'size'
            'type': 'string'
            'def': 'm'
            'descr': loc('%Controls_checkbox__attrs_size')
        }
        {
            'name': 'value'
            'type': 'string'
            'def': 'on'
            'descr': loc('%Controls__attrs_value')
        }
    ]

    apply . _content_attrs (attrs)

    apply . _content_sample ("<xb-radio value=\"1\" name=\"radio\" checked>radio label1</xb-radio>\n<br/>\n<xb-radio value=\"2\" name=\"radio\">radio label2</xb-radio>")

    <a href="#/examples/radio">{loc('%Controls__more_example')}</a>
}

match .* _content-checkbox {
    <h2 class="sub-header anchor" data-hash="controls/checkbox">{loc('%Controls_checkbox__title')}</h2>
    <p>{html(loc('%Controls_checkbox__descr_p1'))}</p>

    apply . _content_syntax ("<xb-checkbox value=\"1\" name=\"checkbox\">checkbox label</xb-checkbox>")

    attrs = [
        {
            'name': 'autofocus'
            'type': 'boolean'
            'def': 'false'
            'descr': loc('%Controls__attrs_autofocus')
        }
        {
            'name': 'checked'
            'type': 'boolean'
            'def': 'false'
            'descr': loc('%Controls__attrs_checked')
        }
        {
            'name': 'for'
            'type': 'string'
            'descr': loc('%Controls__attrs_for')
        }
        {
            'name': 'form'
            'type': 'string'
            'descr': loc('%Controls__attrs_form')
        }
        {
            'name': 'name'
            'type': 'string'
            'descr': loc('%Controls__attrs_name')
        }
        {
            'name': 'required'
            'type': 'boolean'
            'def': 'false'
            'descr': loc('%Controls__attrs_required')
        }
        {
            'name': 'size'
            'type': 'string'
            'def': 'm'
            'descr': loc('%Controls_checkbox__attrs_size')
        }
        {
            'name': 'value'
            'type': 'string'
            'def': 'on'
            'descr': loc('%Controls__attrs_value')
        }
    ]

    apply . _content_attrs (attrs)

    apply . _content_sample ("<xb-checkbox value=\"1\" name=\"checkbox\">checkbox label</xb-checkbox>")

    <a href="#/examples/checkbox">{loc('%Controls__more_example')}</a>
}

match .* _content-button {
    <h2 class="sub-header anchor" data-hash="controls/button">{loc('%Controls_button__title')}</h2>
    <p>{html(loc('%Controls_button__descr_p1'))}</p>
    <p>{html(loc('%Controls_button__descr_p2'))}</p>

    apply . _content_syntax ("<xb-button>button</xb-button>")

    theme = [
        'action'
        'dark'
        'flying'
        'normal'
        'promo'
        'pseudo-inverted'
        'pseudo'
    ]

    type = [
        'label'
        'inline'
        'link'
        'file'
        'button'
        'submit'
        'checkbox'
        'radio'
    ]

    attrs = [
        {
            'name': 'autofocus'
            'type': 'boolean'
            'def': 'false'
            'descr': loc('%Controls__attrs_autofocus')
        }
        {
            'name': 'checked'
            'type': 'boolean'
            'def': 'false'
            'descr': loc('%Controls__attrs_checked')
        }
        {
            'name': 'for'
            'type': 'string'
            'descr': loc('%Controls__attrs_for')
        }
        {
            'name': 'form'
            'type': 'string'
            'descr': loc('%Controls__attrs_form')
        }
        {
            'name': 'href'
            'type': 'string'
            'descr': loc('%Controls_button__attrs_href')
        }
        {
            'name': 'multiple'
            'type': 'boolean'
            'def': 'false'
            'descr': loc('%Controls_button__attrs_multiple')
        }
        {
            'name': 'name'
            'type': 'string'
            'descr': loc('%Controls__attrs_name')
        }
        {
            'name': 'required'
            'type': 'boolean'
            'def': 'false'
            'descr': loc('%Controls__attrs_required')
        }
        {
            'name': 'size'
            'type': 'string'
            'def': 'm'
            'descr': loc('%Controls_button__attrs_size')
        }
        {
            'name': 'target'
            'type': 'string'
            'descr': loc('%Controls_button__attrs_target')
        }
        {
            'name': 'theme'
            'type': 'string'
            'def': 'normal'
            'descr': (
                loc('%Controls_button__attrs_theme')
                " "

                for theme.* {
                    if (index() > 0) {
                        ", "
                    }
                    wrap-code(.)
                }
                "."
            )
        }
        {
            'name': 'type'
            'type': 'string'
            'def': 'button'
            'descr': (
                loc('%Controls_button__attrs_type')
                " "

                for type.* {
                    if (index() > 0) {
                        ", "
                    }
                    wrap-code(.)
                }
                "."
            )
        }
        {
            'name': 'value'
            'type': 'string'
            'descr': loc('%Controls__attrs_value')
        }
    ]

    apply . _content_attrs (attrs)

    apply . _content_sample ("<xb-button type=\"checkbox\">checkbox</xb-button>")

    <a href="#/examples/button">{loc('%Controls__more_example')}</a>
}

match .* _content-link {
    <h2 class="sub-header anchor" data-hash="controls/link">{loc('%Controls_link__title')}</h2>
    <p>{html(loc('%Controls_link__descr_p1'))}</p>

    apply . _content_syntax ("<xb-link href=\"http://ya.ru\" target=\"_blank\">ya.ru</xb-link>")

    theme = [
        'normal'
        'outer'
        'pseudo'
        'empty'
    ]

    attrs = [
        {
            'name': 'href'
            'type': 'string'
            'descr': loc('%Controls_link__attrs_href')
        }
        {
            'name': 'name'
            'type': 'string'
            'descr': loc('%Controls_link__attrs_name')
        }
        {
            'name': 'target'
            'type': 'string'
            'def': '_self'
            'descr': loc('%Controls_link__attrs_target')
        }
        {
            'name': 'theme'
            'type': 'string'
            'def': 'normal'
            'descr': (
                loc('%Controls_link__attrs_theme')
                " "

                for theme.* {
                    if (index() > 0) {
                        ", "
                    }
                    wrap-code(.)
                }
                "."
            )
        }
    ]

    apply . _content_attrs (attrs)

    apply . _content_sample ("<xb-link href=\"http://ya.ru\" target=\"_blank\" theme=\"outer\">ya.ru</xb-link>")

    <a href="#/examples/link">{loc('%Controls__more_example')}</a>
}

match .* _content-ico {
    <h2 class="sub-header anchor" data-hash="controls/icons">{loc('%Controls_ico__title')}</h2>
    <p>{html(loc('%Controls_ico__descr_p1'))}</p>
    <p>{html(loc('%Controls_ico__descr_p2'))}</p>
    <p>{html(loc('%Controls_ico__descr_p3'))}</p>

    apply . _content_syntax ("<xb-ico type=\"notification\">{loc('%Controls_ico__syntax_example')}</xb-ico>")

    types = [
        'attention'
        'close'
        'check'
        'download'
        'download-white'
        'dropdown'
        'eye'
        'link'
        'link-white'
        'mail'
        'notification'
        'odnoklassniki'
        'pause'
        'people'
        'play'
        'print'
        'remove'
        'services'
        'settings'
        'three-dots'
        'trash'
        'trash-white'
        'twitter'
        'help'
        'upload'
        'upload-white'
        'vk'
    ]

    attrs = [
        {
            'name': 'active'
            'type': 'boolean'
            'def': 'false'
            'descr': loc('%Controls_ico__attrs_active')
        }
        {
            'name': 'disabled'
            'type': 'boolean'
            'def': 'false'
            'descr': loc('%Controls_ico__attrs_disabled')
        }
        {
            'name': 'size'
            'type': 'string'
            'def': 's'
            'descr': loc('%Controls_ico__attrs_size')
        }
        {
            'name': 'value'
            'type': 'string'
            'def': '&amp;nbsp;'
            'descr': loc('%Controls_ico__attrs_value')
        }
        {
            'name': 'type'
            'type': 'string'
            'descr': (
                loc('%Controls_ico__attrs_type')
                " "

                for types.* {
                    if (index() > 0) {
                        ", "
                    }
                    wrap-code(.)
                }
                "."
            )
        }
    ]

    apply . _content_attrs (attrs)

    apply . _content_sample ("<xb-ico type=\"twitter\" disabled></xb-ico>")

    <a href="#/examples/icons">{loc('%Controls__more_example')}</a>
}
